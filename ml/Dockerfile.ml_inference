FROM python:3.11-slim-bookworm

# Install build-essential and other necessary libraries
# build-essential includes gcc, g++, make, etc.
# libpq-dev is for psycopg2-binary
# python3-dev is for Python headers
# libffi-dev (often needed by some packages)
# libssl-dev (often needed by some packages like cryptography or database drivers)
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    build-essential \
    libpq-dev \
    python3-dev \
    libffi-dev \
    libssl-dev \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Copy ml/requirements.txt from host to /app/requirements.txt in container
COPY ml/requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Download NLTK data for text processing
RUN python -c "import nltk; nltk.download('stopwords'); nltk.download('punkt'); nltk.download('wordnet')"

# Create the scripts directory
RUN mkdir -p ml/api ml/scripts ml/models

# Copy the explore_data.py script from ml/scripts/ to /app/ml/scripts/
COPY ml/api/main.py ./ml/api/
COPY ml/scripts/train_model.py ./ml/scripts/

# Copy the trained models and feature engineering tools
# These are saved by train_model.py to ml/models/
COPY ml/models/ ./ml/models/

# Set environment variables for database connection (runtime injection is best practice for production, but ENV for capstone utility is okay)
ENV DB_HOST=host.docker.internal
ENV DB_PORT=5435
ENV DB_NAME=deploycamp
ENV DB_USER=postgres
ENV MLFLOW_TRACKING_URI=http://host.docker.internal:5000

# Expose the port FastAPI will run on
EXPOSE 8000

# Command to run the FastAPI application using Uvicorn
# The command is `uvicorn <module_name>:<app_instance_name> --host <host> --port <port>`
CMD ["uvicorn", "ml.api.main:app", "--host", "0.0.0.0", "--port", "8000"]